name:                    i3owm
about:                   Weather and ISS spotting extension for i3status
after_long_help:         |
        EXAMPLE:
            Within your i3 configutation file just pipe the i3status output to i3owm like in the
            following example (you will have top replace <key> with your API key to make it work):

            bar {
              status_command i3status | i3owm -p 2 -r -k <key> -c Berlin,DE -f '{icon} {temp}{temp_unit}'
            }

            Example output: â›… 11Â°C

            bar {
              status_command i3status | i3owm -rp2 -k <key> -c Berlin,DE -f '{iss_icon}{iss}'
            }

            Example output: ðŸ›°+03:12
args:
    - apikey:
        short:           k
        long:            apikey
        about:           OpenWeatherMap API key (see at https://openweathermap.org/api)
        takes_value:     true
    - location:
        short:           c
        long:            location
        about:           location city name, city ID or coordinate
        long_about:      city's name maybe followed by comma-separated 2-letter (state code for the USA locations and) country code (ISO3166) or city ID (see https://openweathermap.org/find) or geographical coordinate as comma-separated latitude and longitude.
        takes_value:     true
        default_value:   Berlin,DE
    - format:
        short:           f
        long:            format
        about:           format string
        default_value:   "{city} {icon} {temp}{temp_unit}"
        takes_value:     true
        long_about:      |
            format string including one ore more of the following keys
            {city}          City name
            {main}          Group of weather parameters (Rain, Snow, Extreme
                            etc.)
            {description}   Weather condition within the group
            {icon}          Weather icon
            {pressure}      Atmospheric pressure (on the sea level, if there is
                            no sea_level or grnd_level data), hPa
            {humidity}      Humidity, %
            {wind}          Wind direction as N, NW, W, SW, S, SO, O or NO
            {wind_icon}     Wind direction as arrow icon
            {wind_speed}    Wind speed, {speed_unit}
            {wind_deg}      Wind direction, degrees (meteorological)
            {deg_unit}      Direction unit (degrees: Â°)
            {visibility}    Visibility, meter
            {visibility_km} Visibility, kilometer
            {rain.1h}       Rain volume for the last 1 hour, mm
            {rain.3h}       Rain volume for the last 3 hours, mm
            {snow.1h}       Snow volume for the last 1 hour, mm
            {snow.3h}       Snow volume for the last 3 hours, mm
            {temp_min}      Minimum temperature at the moment. This is minimal currently observed
                            temperature (within large megalopolises and urban areas), {temp_unit}
            {temp_max}      Maximum temperature at the moment. This is maximal
                            currently observed temperature (within large
                            megalopolises and urban areas), {temp_unit}
            {feels_like}    Temperature. This temperature parameter accounts
                            for the human perception of weather, {temp_unit}
            {temp}          Temperature, {temp_unit}
            {temp_unit}     Temperature
                            (standard=K, metric=Â°C, imperial=Â°F)
            {speed_unit}    Wind speed unit
                            (standard=m/s, metric=m/s, imperial=mi/h)
            {update}        Local time of last update, HH:MM
            {iss}           ISS spotting time (HH:MM) or latency (-hh::mm::ss)
                            or duration (+hh::mm::ss)
            {iss_icon}      show ðŸ›°  if ISS is visible
            {iss_space}     space (' ') if any ISS information is displayed
    - position:
        long:            position
        short:           p
        about:           position of output in JSON when wrapping i3status
        takes_value:     true
    - lang:
        short:           l
        long:            lang
        about:           two character language code of weather descriptions
        default_value:   en
        takes_value:     true
    - reverse:
        short:           r
        long:            reverse
        about:           reverse position (from right)
    - units:
        short:           u
        long:            units
        about:           use imperial units
        takes_value:     true
        possible_values: [ metric, imperial, standard ]
        default_value:   metric
    - poll:
        short:           P
        long:            poll
        about:           duration of polling period in minutes
        default_value:   "10"
        takes_value:     true
    - soon:
        short:           s
        long:            soon
        about:           duration in minutes when ISS rising is "soon" in minutes
        default_value:   "15"
        takes_value:     true
    - cloudiness:
        short:           C
        long:            cloudiness
        about:           maximum cloudiness in percent at which ISS can be treated as visible
        default_value:   "25"
        takes_value:     true
    - level:
        short:           L
        long:            level
        about:           ISS spotting level
        long_about:      |
            watch = only show duration while ISS is visible
            soon = show latency until ISS will be visible (includes 'watch')
            rise = show time of next spotting event (includes 'soon' and 'watch')
        default_value:   soon
        takes_value:     true
        possible_values: [ watch, soon, rise ]
    - blink:
        short:           b
        long:            blink
        about:           let ISS icon blink when visible
    - notify:
        short:           n
        long:            notify
        about:           if set shows notifications about ISS getting visible
